#!/usr/bin/env ruby

if (%w( -h --help -help help ) & ARGV).length > 0
  puts "usage: djsd [-hv]"
  puts "starts dotjs server in the foreground. kill with ^C"
  exit
end

if ARGV.include?('-v')
  puts "djsd 2.0"
  exit
end

require 'webrick'
require 'webrick/https'

dotjs = Class.new(WEBrick::HTTPServlet::AbstractServlet) do
  def do_GET(request, response)
    body = build_body(request.path)

    response.status = body.empty? ? 204 : 200
    if origin = detect_origin(request)
      response['Access-Control-Allow-Origin'] = origin
    end
    response['Content-Type'] = 'text/javascript'
    response.body = body
  end

  def build_body(path)
    files = [File.expand_path("default.js")]
    paths = path.gsub('/','').split('.')

    until paths.empty?
      file = File.expand_path(paths.join('.'))
      files << file if File.file?(file)
      paths.shift
    end

    body = "// dotjs is working! //\n"

    files.each do |file|
      body << File.read(file) + "\n" if File.file?(file)
    end

    body
  end

  def detect_origin(req)
    path   = req.path
    origin = req.header['origin']
    search = path.gsub('/','').gsub(/\.js$/,'') + '$'

    if origin.length == 1 && path.length != 1 && origin[0].match(search)
      origin[0]
    end
  end
end

ssl_info = DATA.read
ssl_cert = ssl_info.scan(/(-----BEGIN CERTIFICATE-----.+?-----END CERTIFICATE-----)/m)[0][0]
ssl_key  = ssl_info.scan(/(-----BEGIN RSA PRIVATE KEY-----.+?-----END RSA PRIVATE KEY-----)/m)[0][0]

server_options = {
  :BindAddress => "127.0.0.1",
  :Port => 3131,
  :AccessLog => [],
  :SSLEnable => true,
  :SSLVerifyClient => OpenSSL::SSL::VERIFY_NONE,
  :SSLPrivateKey => OpenSSL::PKey::RSA.new(ssl_key),
  :SSLCertificate => OpenSSL::X509::Certificate.new(ssl_cert),
  :SSLCertName => [["CN", WEBrick::Utils::getservername]],
}

server = WEBrick::HTTPServer.new(server_options)
server.mount('/', dotjs)

%w( INT TERM ).each do |sig|
  trap(sig) { server.shutdown }
end

server.start

__END__
-----BEGIN CERTIFICATE-----
MIIELTCCAxWgAwIBAgIJAO/vmlCHiL/+MA0GCSqGSIb3DQEBCwUAMHwxCzAJBgNV
BAYTAlVTMQswCQYDVQQIDAJOWTESMBAGA1UEBwwJTG9jYWxob3N0MRIwEAYDVQQK
DAlMb2NhbGhvc3QxEjAQBgNVBAMMCUxvY2FsaG9zdDEkMCIGCSqGSIb3DQEJARYV
bG9jYWxob3N0QGV4YW1wbGUuY29tMCAXDTE3MDUxNjA5MzkyMloYDzIxMTcwNDIy
MDkzOTIyWjB8MQswCQYDVQQGEwJVUzELMAkGA1UECAwCTlkxEjAQBgNVBAcMCUxv
Y2FsaG9zdDESMBAGA1UECgwJTG9jYWxob3N0MRIwEAYDVQQDDAlMb2NhbGhvc3Qx
JDAiBgkqhkiG9w0BCQEWFWxvY2FsaG9zdEBleGFtcGxlLmNvbTCCASIwDQYJKoZI
hvcNAQEBBQADggEPADCCAQoCggEBAMG5gkLTT6255bxb0eSJp1MWavebHQO+SMM9
3lY07jQURZFHUXIZR2uiOxcHawvfOwSIKnqL9Wo4U1siVQ1n+knDQpFoOS92ym3d
ptF5Mg4EaCb0Iv7LbpsfS/AVtMz3n1jkZ+DtUoW6i6A/WxJZWzfj4LHFQGqSz0WK
yWv7MSXpv55Ikut1vCZzi94UoCmqmmRdCeMeXTYotAJaDk69sr+ckKI/3kjUicEu
04veAa6Af1PXyOT/yzeDQ1omKUnRwDbU8q0Vhj1t3TfqFFnwtUL4K2QvsymLROWx
VHp2snpr2s26o9A6N1nd5/xMbctc0BrKzlcOb3JBfc/pbzfU9L8CAwEAAaOBrzCB
rDAdBgNVHQ4EFgQU11hFOQugHYD1ciuQcLR4K0wH120wHwYDVR0jBBgwFoAU11hF
OQugHYD1ciuQcLR4K0wH120wCQYDVR0TBAIwADALBgNVHQ8EBAMCBaAwJAYDVR0R
BB0wG4IJbG9jYWxob3N0ggkxMjcuMC4wLjGCAzo6MTAsBglghkgBhvhCAQ0EHxYd
T3BlblNTTCBHZW5lcmF0ZWQgQ2VydGlmaWNhdGUwDQYJKoZIhvcNAQELBQADggEB
ADjVn579SKjCfVU5Y/Jl7LpxtoxAlu7GKN0U9UwcKEfHQk/LSdQbN45Ux6AGN4/b
Jm+ZOnJmyN7mdFEnQgjtrdCyCRK5VYQ9Ej3gn9BNUr+/OZGxKrB4/ASCSmTXrsbk
XxIanlBooBcu3E0EpzPEgDgCMO/hmMWiOCA4nUb48K0/E8NL32QLSoXhcEAcmbS2
LW1Rgq0fY76znvGmSzUK2kUEY0LfMJKKjkLOPVk10hIjJ0z6kaqKffVb6v9IrWOT
PxfDeD07T9a8ebTnkD/AK5+NX2qNj93/O3I++/gfTJ9GiYBJ+DxfS0htUWtW1wG4
D9WGQiGHiZF3Uw+dz5s2T5g=
-----END CERTIFICATE-----
-----BEGIN RSA PRIVATE KEY-----
MIIEpQIBAAKCAQEAwbmCQtNPrbnlvFvR5ImnUxZq95sdA75Iwz3eVjTuNBRFkUdR
chlHa6I7FwdrC987BIgqeov1ajhTWyJVDWf6ScNCkWg5L3bKbd2m0XkyDgRoJvQi
/stumx9L8BW0zPefWORn4O1ShbqLoD9bEllbN+PgscVAapLPRYrJa/sxJem/nkiS
63W8JnOL3hSgKaqaZF0J4x5dNii0AloOTr2yv5yQoj/eSNSJwS7Ti94BroB/U9fI
5P/LN4NDWiYpSdHANtTyrRWGPW3dN+oUWfC1QvgrZC+zKYtE5bFUenayemvazbqj
0Do3Wd3n/Exty1zQGsrOVw5vckF9z+lvN9T0vwIDAQABAoIBAHAQ+KHfzAAbwiKs
m0cxunH+TfLe8HHx6fXIHI6SIBpQf84DC8KNjRtexgAUcoBzqph8jNZHkLjZzJ6z
xa/zrn5tTlz/hdVHSuMzjgUvrx0cv4OJR5VN6bYi7LL+W5EWzj+GIfGkWFC0EYGq
JO0AdBxo3tr32MPOGcmI9+xXa58aD+iLZAS3irpqyjL7XDVA/7OQIgKKrYk9GZ0C
AKGeO/+B83LLo23tZ+Sm5AiMAwyaFDU6Ca6v4Q6WbjqwWNzH5DZKYMkh5tBNYOvN
nh2AiG+Tsr5O16ecO3wpRNeaIlv7KVa3myqrSsGxj3oj44S+SJtEeMYVMKRffE4m
yn7ACMECgYEA4fxtHPzijWU9CCWY1Ajci8flovxHwv8NeI3H0mzhCD9Dl40KWe2a
M7xdMbpxugUihUnv3ekLDVQQUq60dCJ8vtBvi2Xky6LJeo67DqYFulJiqUKjPgUG
azRKPh+alUYpAjaLoSgTrXrFhbllVhtH5JXhkvU7erHCzxMpj185XuUCgYEA23Qw
L94TKMygvYly47sM5xeGU+w1aBzH6hZWEl7fHO483No5vhfOM/jxVk1YGzL5mjZS
c8/B21byZPeDgpxHp+bBusTgWQeEjzghScz+Alb6Sy3okz39dKxYw+oubVQKoSdN
W1eQN/9sifDgu+dix801lrZg+5oV/M/aBACC5tMCgYEAjSuPTgh7zjBsC+bQrcRL
YdaiEUrf2WRTGfgX18/EU86Rft7QlJTlO2R0I1iBKt+CTRl/CnVGPjFBcSVJ/TJ+
EwVKaR5h6wPqMPFw0RnNgjNtBqdmKpwhAl9L8br0akPF4mgImcfbYwfK1FqYf03T
f2xR2efwHBlnxMwHrlSiFjECgYEAgIRuo9m+Bqqvh9AyxEMKr1sLg6JVNH+GZARo
q6F7sAmlAwGZx0VRsQYc75mj+2nC2xjs+H223ajxk0eQcLDtFdsBoUsix4CrlOQe
OoYeS2h8dAKSrYgkImu8IB/IyKXrA61slA2Xm/OtsKqsMd6z7qayt2xfJ3l5XvCq
kKVsA5kCgYEAr83oQ0qZPn/4FfYRK7wqGdEGFA0Tqfi4JBBsePX2XbegcPy7UBAg
E60Zzvq3CFKaWCXODwOM9WiyT4frl6HKjjRZcpO5/5DfLS9dmUPeGGOY23lPI3o3
mfrx4v5Cfmkyw7AzQpiRJjyy8MLFf3luHKThjd6zU425grA/Cdpl6yU=
-----END RSA PRIVATE KEY-----
